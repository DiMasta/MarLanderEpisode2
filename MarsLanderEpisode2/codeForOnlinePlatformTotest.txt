#include <iostream>
#include <string>
#include <vector>
#include <algorithm>

using namespace std;

int out[] = {
    -5, 1,
	-10, 1,
	-14, 1,
	-21, 0,
	-13, 1,
	-27, 2,
	-42, 1,
	-47, 2,
	-43, 3,
	-36, 2,
	-24, 1,
	-12, 0,
	-14, 0,
	1, 1,
	-12, 2,
	-5, 1,
	-5, 0,
	-11, 0,
	4, 0,
	5, 0,
	18, 0,
	15, 0,
	3, 1,
	1, 1,
	-2, 1,
	-14, 2,
	-10, 1,
	-14, 1,
	-17, 0,
	-31, 0,
	-37, 1,
	-27, 0,
	-33, 0,
	-29, 1
};

int main() {
    int surfaceN; // the number of points used to draw the surface of Mars.
    cin >> surfaceN; cin.ignore();
    for (int i = 0; i < surfaceN; i++) {
        int landX; // X coordinate of a surface point. (0 to 6999)
        int landY; // Y coordinate of a surface point. By linking all the points together in a sequential fashion, you form the surface of Mars.
        cin >> landX >> landY; cin.ignore();
    }

    int turn = 0;

    // game loop
    while (1) {
        int X;
        int Y;
        int hSpeed; // the horizontal speed (in m/s), can be negative.
        int vSpeed; // the vertical speed (in m/s), can be negative.
        int fuel; // the quantity of remaining fuel in liters.
        int rotate; // the rotation angle in degrees (-90 to 90).
        int power; // the thrust power (0 to 4).
        cin >> X >> Y >> hSpeed >> vSpeed >> fuel >> rotate >> power; cin.ignore();
    
        //cerr << "Turn=" << turn / 2 << endl;
    	//cerr << "X=" << X << "m, Y=" << Y << "m, ";
	    //cerr << "HSPeed=" << hSpeed << "m/s VSpeed=" << vSpeed << "m/s\n";
    	//cerr << "Fuel=" << fuel << "l, Angle=" << rotate << ", Power=" << power << "m/s2\n";
	    //cerr << endl << endl;
        
		cout << out[turn] << " " << out[turn + 1] << endl;
        
        turn += 2;
    }
}